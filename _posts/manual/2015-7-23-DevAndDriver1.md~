---
layout: post
title: Linux设备驱动模型及其他(1)
description: Linux设备驱动模型及其他(1)
category: manual
---

##引子

一开始考虑这样一段代码

	inf = open("/floppy/TEST", O_RDONLY, 0);
	outf = open("/tmp/test", O_WRONLY | O_CREAT | O_TRUNC, 0600);
	do {
		len = read(inf, buf, 4096);
		write(outf, buf, len);
	} while (len);
	close(outf);
	close(inf);

代码很简单,就是将TEST拷贝为test.众所周知,无论open还是write都最终会陷入内核,由内核完成正真的打开和读写,问题是到底是怎么打开怎么读写...可能对Linux内核稍微有些了解的朋友还知道VFS...但这还远远不够.


##总线

我们使用的计算机有很多硬件设备,包括CPU,硬盘,显卡,鼠标,键盘...而CPU是他们的老大,一个硬件设备如果要正常工作,那么它就得和CPU搞好关系,而它们之间的纽带就是总线.所有的外设都并不是直接连接到CPU的,而是需要总线把它们连接起来.总线来来负责设备和CPU之间以及各个设备之间的通讯.一下是一些总线类型:
<ul>
<li>PCI</li>
<li>ISA</li>
<li>SBus</li>
<li>IEEE1394</li>
<li>USB</li>
<li>SCSI</li>
<li>串口并口</li>
</ul>

而目前无论哪种处理器体系结构,系统都不会只有一种总线,通常都是一些总线的组合.比如常见的x86系统结构一般是:CPU通过FSB(前端总线)连接到内存,通过PCI桥连接到PCI总线.而PCI总线有可以通过PCI-PCI桥,或者PCI-ISA桥连接到ISA总线,结构如图:
![bus1](/images/bus.gif) 
图1
![bus2](/images/bus2.jpg)
图2

然而随着技术的发展,现在的情况并不是这么简单,CPU通过更快速的总线连接到北桥,北桥连接到内存,北桥与南桥DMI连接,南桥负责各种IO总线的通讯....我们这里先不考虑这么多.


##总线树与设备资源分配

写到这里,大致的硬件情况已经了解了,然而主板生产厂商千千万，而且大家DIY电脑时肯定在主板的插槽上安装显卡（恩，这里推荐老黄核弹！全新帕斯卡尔架构，你值得拥有，买4块交火可以跑《显卡齐瞎传6：情怀》30fps哦！）、声卡、网卡、硬盘等等。。。系统怎么才知道当前连接到系统的总线结构和设备呢？我们这里就要来解决这个问题。


为了理解的方便还有作者能力有限，我们这里仅以x86体系、PCI总线作为分析样本。大家都知道，在电脑开机的一瞬间并不是直接就跑系统了，而是先有主板上的BIOS程序接管计算机，完成自检等工作，然而它的工作不仅仅如此，BIOS还会完成一些工作，像操作系统提供服务。这些工作中，就包括PCI总线的探测和相关配置。但是BIOS程序大致也被一些商业公司垄断了，想要知道具体的运作原理是基本不可能了，所以本博客到此结束！（开个玩笑）


由于Linux已经支持了众多平台，而且PCI总线并不是专为PC所设计的，而有些平台上并没有BIOS类似的程序，所以Linux自身是可以完成PCI探测和配置的工作的，那我们的故事就从这里开始：




















